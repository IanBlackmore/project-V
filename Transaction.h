#pragma once
#include <vector>
#include <iostream>
#include <chrono>
#include <ctime>
#include <string>
#include <thread>




/// @brief Holds all data related to a transaction
class Transaction {
	/// @brief any comments or notes about the transaction, such as what was purchased
	std::string details;
	/// @brief money gained (or lost, negatives allowed) from a transaction
	double moneyGain;
	/// @brief the date and time of the transaction
	std::string timestamp;
	/// @brief the id within the database of the transaction
	unsigned long id;
	/// @brief contains the team that initiated the transaction
	std::string transactionInitiatingTeam;
public:
	/// @brief basic default constructor
	Transaction();
	/// @brief generates a transaction from moneyGain, details and the team that made it. Will autogenerate a timestamp.
	/// id will be generated by the database
	/// @param moneyGain amount of money gained or lost
	/// @param details details of the transaction
	/// @param transactionInitiatingTeam team that made the transaction
	Transaction(double moneyGain, std::string details, std::string transactionInitiatingTeam);
	/// @brief for taking transaction details from the database and creating a local transaction object
	/// @param moneyGain amount of money gained or lost
	/// @param details details of the transaction
	/// @param transactionInitiatingTeam team that made the transaction
	/// @param timestamp date and time of the transaction
	/// @param id the id of the transaction
	Transaction(double moneyGain, std::string details, std::string transactionInitiatingTeam, std::string timestamp, unsigned long id);
	/// @brief getter for moneyGain
	/// @return returns moneyGain
	double getMoneyGain();
	/// @brief getter for details
	/// @return returns details
	std::string getDetails();
	/// @brief getter for timestamp
	/// @return returns timestamp
	std::string getTimestamp();
	/// @brief getter for transactionInitiatingTeam
	/// @return returns transactionInitiatingTeam
	std::string getTransactionInitiatingTeam();
	/// @brief getter for id
	/// @return returns id
	unsigned long getID();
};


